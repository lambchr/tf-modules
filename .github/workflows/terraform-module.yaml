name: Terraform Module
on: pull_request
permissions:
  contents: write
  pull-requests: write
jobs:
  find-changes:
    name: Find changes
    runs-on: ubuntu-latest
    outputs:
      changed-modules: ${{ steps.changed-modules.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: '.github/workflows/**'

      - name: Get changed Terraform modules
        id: changed-modules
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const paths = "${{ steps.changed-files.outputs.all_modified_files }}"
            const regex = /modules\/([^/]+)/g;
            const matches = paths.match(regex);
            if (!matches) {
              return [];
            }
            // Extract the module names from the matches
            const moduleNames = matches.map(match => {
              return match; // Extract the entire match
            });
            // Remove duplicates and return the unique module names
            const uniqueModuleNames = Array.from(new Set(moduleNames));
            console.log(uniqueModuleNames);
            return uniqueModuleNames;

  validate-module:
    name: ${{ matrix.module }} validate
    runs-on: ubuntu-latest
    needs: find-changes
    strategy:
      matrix: 
        module: ${{ fromJson(needs.find-changes.outputs.changed-modules) }}
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - run: terraform init
      - run: terraform fmt -diff -check
      - run: terraform validate

  # This allows us to have a branch protection rule for jobs with matrix.
  job-status:
    name: Status
    runs-on: ubuntu-latest
    needs:
      - validate-module
    if: always()
    steps:
      - name: Successful deploy
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: |
          echo "SUCCESS"
          echo "======="
          echo "This job is checked by GitHub branch protection to ensure matrix jobs have completed successfully."
          echo "Success means all jobs have passed and a merge can happen."
          exit 0
      - name: Failing deploy
        if: ${{ contains(needs.*.result, 'failure') }}
        run: |
          echo "FAILURE"
          echo "======="
          echo "This job is checked by GitHub branch protection to ensure matrix jobs have completed successfully."
          echo "Failure means another job has failed and should be resolved before a merge can happen."
          exit 1
